version: '3.8'
services:

  # InspectIT
  # ============================================================================
  # Agent
  agent:
    build: ./docker/agent
    image: inspectit/inspectit-agent
    container_name: inspectit-agent
    volumes:
      - agent-vol:/agent

  # Config server
  ocelot-config-server:
    image: inspectit/inspectit-ocelot-configurationserver:${INSPECTIT_OCELOT_VERSION}
    container_name: ocelot-config-server
    environment:
      - INSPECTIT_CONFIG_SERVER_WORKING_DIRECTORY=/configuration-server
      - INSPECTIT_CONFIG_SERVER_DEFAULT_USER_PASSWORD=demo
    volumes:
      - ./docker/configuration-server:/configuration-server
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8090:8090

  # Infrastructure
  # ============================================================================
  # Config server
  config-server:
    image: trickster/spring-petclinic-config-server
    container_name: trickster-config-server
    environment:
      - INSPECTIT_SERVICE_NAME=config-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - agent
      - ocelot-config-server
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8888:8888

  # Discovery service
  discovery-server:
    image: trickster/spring-petclinic-discovery-server
    container_name: trickster-discovery-server
    environment:
      - INSPECTIT_SERVICE_NAME=discovery-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - config-server
      - ocelot-config-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8761:8761

  # Services
  # ============================================================================
  # Customers service
  customers-service:
    image: trickster/spring-petclinic-customers-service
    container_name: trickster-customers-service
    environment:
      - INSPECTIT_SERVICE_NAME=customers-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8081:8081

  # Visits service
  visits-service:
    image: trickster/spring-petclinic-visits-service
    container_name: trickster-visits-service
    environment:
      - INSPECTIT_SERVICE_NAME=visits-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8082:8082

  #Vets service
  vets-service:
    image: trickster/spring-petclinic-vets-service
    container_name: trickster-vets-service
    environment:
      - INSPECTIT_SERVICE_NAME=vets-service
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8083:8083

  # API gateway
  api-gateway:
    image: trickster/spring-petclinic-api-gateway
    container_name: trickster-api-gateway
    environment:
      - INSPECTIT_SERVICE_NAME=api-gateway
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
      - config-server
      - ocelot-config-server
      - discovery-server
      - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://discovery-server:8761 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
      - 8080:8080

  # Admin Server
  # ============================================================================
  admin-server:
    image: trickster/spring-petclinic-admin-server
    container_name: trickster-admin-server
    environment:
      - INSPECTIT_SERVICE_NAME=admin-server
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
     - config-server
     - ocelot-config-server
     - discovery-server
     - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
     - 9090:9090

  # Circuit breaker
  # ============================================================================
  # Hystrix dashboard:
  hystrix-dashboard:
    image: trickster/spring-petclinic-hystrix-dashboard
    container_name: trickster-hystrix-dashboard
    environment:
      - INSPECTIT_SERVICE_NAME=hystrix-dashboard
      - INSPECTIT_CONFIG_HTTP_URL=http://ocelot-config-server:8090/api/v1/agent/configuration
      - INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_ENABLED=false
      - INSPECTIT_EXPORTERS_METRICS_INFLUX_URL=http://influxdb-server:8086
      - INSPECTIT_EXPORTERS_TRACING_ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
    depends_on:
     - config-server
     - ocelot-config-server
     - discovery-server
     - agent
    entrypoint: ["sh", "-c","
      ./dockerize -wait=tcp://config-server:8888 \
                  -wait=tcp://ocelot-config-server:8090 \
                  -wait=tcp://influxdb-server:8086 \
                  -wait=tcp://zipkin-server:9411  \
                  -timeout=300s -- &&
      java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Djava.security.egd=file:/dev/./urandom
      -javaagent:/agent/inspectit-ocelot-agent.jar
      -jar /app.jar"]
    volumes:
      - agent-vol:/agent
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    ports:
     - 7979:7979

  # Metrics
  # ============================================================================
  # Grafana
  grafana-direct:
    image: grafana/grafana:6.7.3
    container_name: trickster-grafana-direct
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana/direct/grafana-config:/etc/grafana
      - ./docker/grafana/direct/dashboards:/var/lib/grafana/dashboards
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    restart: always
    ports:
      - 3000:3000

  grafana-mem:
    image: grafana/grafana:6.7.3
    container_name: trickster-grafana-mem
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana/mem/grafana-config:/etc/grafana
      - ./docker/grafana/mem/dashboards:/var/lib/grafana/dashboards
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    restart: always
    ports:
      - 3001:3000

  grafana-fs:
    image: grafana/grafana:6.7.3
    container_name: trickster-grafana-fs
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana/fs/grafana-config:/etc/grafana
      - ./docker/grafana/fs/dashboards:/var/lib/grafana/dashboards
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    restart: always
    ports:
      - 3002:3000

  grafana-redis:
    image: grafana/grafana:6.7.3
    container_name: trickster-grafana-redis
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./docker/grafana/redis/grafana-config:/etc/grafana
      - ./docker/grafana/redis/dashboards:/var/lib/grafana/dashboards
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    restart: always
    ports:
      - 3003:3000

  # InfluxDB
  influxdb-server:
    image: influxdb:1.7.1
    container_name: trickster-influxdb-server
    environment:
      - INFLUXDB_HTTP_FLUX_ENABLED=true
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
    volumes:
      - ./docker/influxdb:/docker-entrypoint-initdb.d
    networks:
      - trk-ex-back-tier
    ports:
      - 8086:8086

  # Chronograf
  chronograf:
    image: chronograf:1.6.2
    environment:
      INFLUXDB_URL: http://influxdb-server:8086
    depends_on:
      - influxdb-server
    networks:
      - trk-ex-back-tier
    ports:
      - "8889:8888"

  # Trazing
  # ============================================================================
  # Zipkin server
  zipkin-server:
   image: openzipkin/zipkin:latest
   container_name: trickster-zipkin-server
   ports:
    - 9411:9411
   networks:
     - trk-ex-back-tier
   restart: always

  # Proxy
  # ============================================================================
  # Trickster
  trickster:
    image: tricksterproxy/trickster:1.1.0-beta
    depends_on:
      - influxdb-server
      - grafana-direct
      - grafana-mem
      - grafana-fs
      - grafana-redis
      - redis
    ports:
      - 8480:8480   # primary frontend proxy port (insecure)
      - 8481:8481   # metrics port (insecure)
      # - 8483:8483 # tls frontend proxy port, unused in this demo
      - 8484:8484   # config reload port (insecure), exposed publicly for demonstration purposes only
    volumes:
      - ./docker/trickster-config:/etc/trickster
      - ./docker/trickster-data:/data/trickster
    networks:
      - trk-ex-back-tier
    restart: always

  # Redis
  redis:
    image: redis:latest
    container_name: trickster-redis
    user: nobody
    ports:
      - 6379:6379
    networks:
      - trk-ex-back-tier
    restart: always

  # Load
  # ============================================================================
  # Load server
  load-server:
    build: ./docker/load-server
    image: trickster/load-server
    container_name: trickster-load-server
    networks:
      - trk-ex-back-tier
      - trk-ex-front-tier
    depends_on:
      - api-gateway
      - customers-service
      - visits-service
      - vets-service

volumes:
  agent-vol:

networks:
  trk-ex-front-tier:
  trk-ex-back-tier:
